def calculate_final_drive_efficiencies(
        final_drive_torques_out, final_drive_ratio, final_drive_torques_in):
    """
    Calculates final drive efficiency [-].

    :param final_drive_torques_out:
        Torque at the wheels [N*m].
    :type final_drive_torques_out: numpy.array

    :param final_drive_ratio:
        Final drive ratio [-].
    :type final_drive_ratio: float

    :param final_drive_torques_in:
        Final drive torque in [N*m].
    :type final_drive_torques_in: numpy.array

    :return:
        Final drive torque efficiency vector [-].
    :rtype: numpy.array
    """

    t_in, t_out = final_drive_torques_in, final_drive_torques_out

    eff = np.ones_like(t_out, dtype=float)

    b = ~((t_out == 0) & (t_in == 0))
    eff[b] = t_out[b] / (final_drive_ratio * t_in[b])

    return np.nan_to_num(eff)
